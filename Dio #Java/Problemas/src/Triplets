package triplets;

import java.util.ArrayList;

/*
 * Given a sorted list of distinct values (no two values are the same) and an integer X.
 *  Count distinct triplets in the list that sum up to given integer X.
 *   Input: List: [1, 2, 4, 5, 6, 8, 9], X = 17 
 *   Output: 2 Explanation: Distinct triplets are (2, 6, 9) and (4, 5, 8)
 *    which have sum equal to X i.e 17.
 * */
public class Main {

	public static void main(String[] args) {

		ArrayList<Integer> vector = new ArrayList<Integer>();

		vector.add(1);
		vector.add(2);
		vector.add(4);
		vector.add(5);
		vector.add(6);
		vector.add(8);
		vector.add(9);

		int X = 17;
		int count = 0;
		
		int i, j, k;
		i = 0;
		j = vector.size() - 1;
		k = i + 1;

		System.out.println("Distinct triplets are ");

		while ((i + 1) < j) {

			if ((vector.get(i) + vector.get(j) + vector.get(k)) == X) {
				count++;
				System.out.println("(" + vector.get(i) + ", " + vector.get(k) + ", " + vector.get(j) + ")");
				
			} else if (j <= (vector.size() / 2)) {
				i++;
				j = vector.size() - 1;
				k = i;
				
			} else if ((k + 1) == j) {
				k = i;
				j--;
			}
			
			k++;
		}

		System.out.println("Total number of triplets: " + count);
	}
}
